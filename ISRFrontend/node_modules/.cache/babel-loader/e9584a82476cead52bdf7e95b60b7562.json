{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport recommendationResponse from \"./recommendationResponse\";\nfunction useRecommendation(recommendFor) {\n  const [recData, setRecData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Create request body\n        const requestBody = {\n          gmap_id: recommendFor\n        };\n\n        // Send POST request\n        const response = await axios.post(\"http://127.0.0.1:5000/search\", requestBody, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setRecData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data using sample response:\", error);\n        setRecData(recommendationResponse);\n      }\n    };\n    fetchData();\n  }, [recommendFor]);\n  return {\n    recData\n  };\n}\nexport default useRecommendation;","map":{"version":3,"names":["useState","useEffect","axios","recommendationResponse","useRecommendation","recommendFor","recData","setRecData","fetchData","requestBody","gmap_id","response","post","headers","data","error","console"],"sources":["/Users/varunpanigrahy/Explorer-Recommedar-RAG/ISRFrontend/src/useRecommendation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport recommendationResponse from \"./recommendationResponse\";\nfunction useRecommendation(recommendFor) {\n  const [recData, setRecData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Create request body\n        const requestBody = {\n          gmap_id: recommendFor,\n        };\n\n        // Send POST request\n        const response = await axios.post(\"http://127.0.0.1:5000/search\", requestBody, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          }\n        });\n        setRecData(response.data);\n        \n      } catch (error) {\n        console.error(\"Error fetching data using sample response:\", error);\n        setRecData(recommendationResponse);\n      }\n    };\n\n    fetchData();\n  }, [recommendFor]);\n\n  return { recData };\n}\n\nexport default useRecommendation;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,SAASC,iBAAiBA,CAACC,YAAY,EAAE;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,WAAW,GAAG;UAClBC,OAAO,EAAEL;QACX,CAAC;;QAED;QACA,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,8BAA8B,EAAEH,WAAW,EAAE;UAC7EI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFN,UAAU,CAACI,QAAQ,CAACG,IAAI,CAAC;MAE3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QAClER,UAAU,CAACJ,sBAAsB,CAAC;MACpC;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,OAAO;IAAEC;EAAQ,CAAC;AACpB;AAEA,eAAeF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}